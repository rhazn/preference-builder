{"version":3,"sources":["../node_modules/@rhazn/logic-components/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","App","useState","Set","signature","setSignature","preference","setPreference","isTPO","setIsTpo","useEffect","getInitialPreferenceForSignature","className","onSignatureUpdated","detail","onClick","allowEmptyRows","onPreferenceChanged","value","toJson","Array","from","Uint8Array","toBinary","ArrayBuffer","s","toString","n","repeat","Math","max","length","join","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,2BAA4B,CAC3B,GACA,GAED,2CAA4C,CAC3C,GACA,GAED,4BAA6B,CAC5B,GACA,GAED,wCAAyC,CACxC,GACA,GAED,4BAA6B,CAC5B,GACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,GACzBG,EAAOC,QAAUf,G,0HC4CFgB,MA3Ef,WACE,MAAkCC,mBAChC,IAAIC,IAAI,CAAC,OADX,mBAAOC,EAAP,KAAkBC,EAAlB,KAGA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA0BL,oBAAkB,GAA5C,mBAAOM,EAAP,KAAcC,EAAd,KASA,OAPAC,qBAAU,WACRH,EAAcI,YAAiCP,MAC9C,CAACA,IAMF,sBAAKQ,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,gCACA,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,mDACA,cAAC,IAAD,CAAeR,UAAWA,OAG5B,sBAAKQ,UAAU,cAAf,UACE,sDACA,cAAC,IAAD,CACEC,mBAAoB,SAACrB,GAAD,OAClBa,EAAab,EAAEsB,cAKrB,sBAAKF,UAAU,cAAf,UACE,oDACA,wBAAQG,QAAS,kBAAMN,GAAUD,IAAjC,SACGA,EAAQ,KAAO,cAItB,qBAAKI,UAAU,WAAf,SACE,sBAAKA,UAAU,cAAf,UACE,kDACA,cAAC,IAAD,CACEN,WAAYA,EACZU,gBAAiBR,EACjBS,oBAAqB,SAACzB,GAAD,OAAYe,EAAcf,EAAEsB,gBAIvD,sBAAKF,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,yCACA,0BACEA,UAAU,2BACVM,MAAK,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAYa,cAGvB,sBAAKP,UAAU,cAAf,UACE,2CACA,0BACEA,UAAU,2BACVM,MAAOE,MAAMC,KACX,IAAIC,WACFhB,EAAaA,EAAWiB,WAAa,IAAIC,YAAY,KAGtDxC,KAAI,SAACkC,GAAD,OAvDJO,EAuDmBP,EAAMQ,SAAS,GAvDvBC,EAuD2B,EAtDjD,IAAIC,OAAOC,KAAKC,IAAI,EAAGH,EAAIF,EAAEM,SAAWN,EAD9B,IAACA,EAAWE,KAwDXK,KAAK,gBClELC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0cd3e7c0.chunk.js","sourcesContent":["var map = {\n\t\"./create-signature.entry.js\": [\n\t\t29,\n\t\t5\n\t],\n\t\"./formula-input.entry.js\": [\n\t\t30,\n\t\t6\n\t],\n\t\"./propositional-world-component.entry.js\": [\n\t\t31,\n\t\t7\n\t],\n\t\"./show-signature.entry.js\": [\n\t\t32,\n\t\t8\n\t],\n\t\"./world-preference-component.entry.js\": [\n\t\t33,\n\t\t9\n\t],\n\t\"./world-selector.entry.js\": [\n\t\t34,\n\t\t10\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 27;\nmodule.exports = webpackAsyncContext;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  getInitialPreferenceForSignature,\n  PropositionalVariable,\n  WorldPreference,\n} from \"@rhazn/logic-ts\";\nimport {\n  CreateSignature,\n  ShowSignature,\n  WorldPreferenceComponent,\n} from \"@rhazn/logic-components-react\";\n\nfunction App() {\n  const [signature, setSignature] = useState<Set<PropositionalVariable>>(\n    new Set([\"a\"] as PropositionalVariable[])\n  );\n  const [preference, setPreference] = useState<WorldPreference>();\n  const [isTPO, setIsTpo] = useState<boolean>(false);\n\n  useEffect(() => {\n    setPreference(getInitialPreferenceForSignature(signature));\n  }, [signature]);\n\n  const pad = (s: string, n: number): string =>\n    \"0\".repeat(Math.max(0, n - s.length)) + s;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Preference Builder</header>\n      <div className=\"flex-row\">\n        <div className=\"flex-column\">\n          <h2>Current Signature</h2>\n          <ShowSignature signature={signature} />\n        </div>\n\n        <div className=\"flex-column\">\n          <h2>Create new signature</h2>\n          <CreateSignature\n            onSignatureUpdated={(e: CustomEvent<Set<PropositionalVariable>>) =>\n              setSignature(e.detail)\n            }\n          />\n        </div>\n\n        <div className=\"flex-column\">\n          <h2>Allow empty ranks?</h2>\n          <button onClick={() => setIsTpo(!isTPO)}>\n            {isTPO ? \"No\" : \"Yes\"}\n          </button>\n        </div>\n      </div>\n      <div className=\"flex-row\">\n        <div className=\"flex-column\">\n          <h2>Preference order</h2>\n          <WorldPreferenceComponent\n            preference={preference}\n            allowEmptyRows={!isTPO}\n            onPreferenceChanged={(e: any) => setPreference(e.detail as any)}\n          />\n        </div>\n      </div>\n      <div className=\"flex-row\">\n        <div className=\"flex-column\">\n          <h2>As JSON</h2>\n          <textarea\n            className=\"code text-representation\"\n            value={preference?.toJson()}\n          ></textarea>\n        </div>\n        <div className=\"flex-column\">\n          <h2>As Binary</h2>\n          <textarea\n            className=\"code text-representation\"\n            value={Array.from(\n              new Uint8Array(\n                preference ? preference.toBinary() : new ArrayBuffer(0)\n              )\n            )\n              .map((value) => pad(value.toString(2), 8))\n              .join(\"\")}\n          ></textarea>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}